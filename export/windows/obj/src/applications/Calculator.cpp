// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_App
#include <App.h>
#endif
#ifndef INCLUDED_ModernWindow
#include <ModernWindow.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_applications_Calculator
#include <applications/Calculator.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_input_IFlxInput
#include <flixel/input/IFlxInput.h>
#endif
#ifndef INCLUDED_flixel_text_FlxText
#include <flixel/text/FlxText.h>
#endif
#ifndef INCLUDED_flixel_text_FlxTextBorderStyle
#include <flixel/text/FlxTextBorderStyle.h>
#endif
#ifndef INCLUDED_flixel_ui_FlxButton
#include <flixel/ui/FlxButton.h>
#endif
#ifndef INCLUDED_flixel_ui_FlxTypedButton_flixel_text_FlxText
#include <flixel/ui/FlxTypedButton_flixel_text_FlxText.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util__FlxColor_FlxColor_Impl_
#include <flixel/util/_FlxColor/FlxColor_Impl_.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_4ce4401548e47863_196_new,"applications.Calculator","new",0x8b6083ff,"applications.Calculator.new","applications/Calculator.hx",196,0xe80993b0)
HX_DEFINE_STACK_FRAME(_hx_pos_4ce4401548e47863_198_new,"applications.Calculator","new",0x8b6083ff,"applications.Calculator.new","applications/Calculator.hx",198,0xe80993b0)
HX_DEFINE_STACK_FRAME(_hx_pos_4ce4401548e47863_202_new,"applications.Calculator","new",0x8b6083ff,"applications.Calculator.new","applications/Calculator.hx",202,0xe80993b0)
HX_DEFINE_STACK_FRAME(_hx_pos_4ce4401548e47863_8_new,"applications.Calculator","new",0x8b6083ff,"applications.Calculator.new","applications/Calculator.hx",8,0xe80993b0)
HX_LOCAL_STACK_FRAME(_hx_pos_4ce4401548e47863_31_number,"applications.Calculator","number",0x4038a08a,"applications.Calculator.number","applications/Calculator.hx",31,0xe80993b0)
HX_LOCAL_STACK_FRAME(_hx_pos_4ce4401548e47863_33_sumFromString,"applications.Calculator","sumFromString",0x6cfd67a5,"applications.Calculator.sumFromString","applications/Calculator.hx",33,0xe80993b0)
HX_LOCAL_STACK_FRAME(_hx_pos_4ce4401548e47863_55_equal,"applications.Calculator","equal",0x60dae913,"applications.Calculator.equal","applications/Calculator.hx",55,0xe80993b0)
HX_LOCAL_STACK_FRAME(_hx_pos_4ce4401548e47863_75_addUI,"applications.Calculator","addUI",0x0a9be014,"applications.Calculator.addUI","applications/Calculator.hx",75,0xe80993b0)
HX_LOCAL_STACK_FRAME(_hx_pos_4ce4401548e47863_83_addUI,"applications.Calculator","addUI",0x0a9be014,"applications.Calculator.addUI","applications/Calculator.hx",83,0xe80993b0)
HX_LOCAL_STACK_FRAME(_hx_pos_4ce4401548e47863_91_addUI,"applications.Calculator","addUI",0x0a9be014,"applications.Calculator.addUI","applications/Calculator.hx",91,0xe80993b0)
HX_LOCAL_STACK_FRAME(_hx_pos_4ce4401548e47863_99_addUI,"applications.Calculator","addUI",0x0a9be014,"applications.Calculator.addUI","applications/Calculator.hx",99,0xe80993b0)
HX_LOCAL_STACK_FRAME(_hx_pos_4ce4401548e47863_107_addUI,"applications.Calculator","addUI",0x0a9be014,"applications.Calculator.addUI","applications/Calculator.hx",107,0xe80993b0)
HX_LOCAL_STACK_FRAME(_hx_pos_4ce4401548e47863_115_addUI,"applications.Calculator","addUI",0x0a9be014,"applications.Calculator.addUI","applications/Calculator.hx",115,0xe80993b0)
HX_LOCAL_STACK_FRAME(_hx_pos_4ce4401548e47863_123_addUI,"applications.Calculator","addUI",0x0a9be014,"applications.Calculator.addUI","applications/Calculator.hx",123,0xe80993b0)
HX_LOCAL_STACK_FRAME(_hx_pos_4ce4401548e47863_131_addUI,"applications.Calculator","addUI",0x0a9be014,"applications.Calculator.addUI","applications/Calculator.hx",131,0xe80993b0)
HX_LOCAL_STACK_FRAME(_hx_pos_4ce4401548e47863_139_addUI,"applications.Calculator","addUI",0x0a9be014,"applications.Calculator.addUI","applications/Calculator.hx",139,0xe80993b0)
HX_LOCAL_STACK_FRAME(_hx_pos_4ce4401548e47863_147_addUI,"applications.Calculator","addUI",0x0a9be014,"applications.Calculator.addUI","applications/Calculator.hx",147,0xe80993b0)
HX_LOCAL_STACK_FRAME(_hx_pos_4ce4401548e47863_154_addUI,"applications.Calculator","addUI",0x0a9be014,"applications.Calculator.addUI","applications/Calculator.hx",154,0xe80993b0)
HX_LOCAL_STACK_FRAME(_hx_pos_4ce4401548e47863_163_addUI,"applications.Calculator","addUI",0x0a9be014,"applications.Calculator.addUI","applications/Calculator.hx",163,0xe80993b0)
HX_LOCAL_STACK_FRAME(_hx_pos_4ce4401548e47863_173_addUI,"applications.Calculator","addUI",0x0a9be014,"applications.Calculator.addUI","applications/Calculator.hx",173,0xe80993b0)
HX_LOCAL_STACK_FRAME(_hx_pos_4ce4401548e47863_181_addUI,"applications.Calculator","addUI",0x0a9be014,"applications.Calculator.addUI","applications/Calculator.hx",181,0xe80993b0)
HX_LOCAL_STACK_FRAME(_hx_pos_4ce4401548e47863_61_addUI,"applications.Calculator","addUI",0x0a9be014,"applications.Calculator.addUI","applications/Calculator.hx",61,0xe80993b0)
HX_LOCAL_STACK_FRAME(_hx_pos_4ce4401548e47863_209_update,"applications.Calculator","update",0x25c39fca,"applications.Calculator.update","applications/Calculator.hx",209,0xe80993b0)
namespace applications{

void Calculator_obj::__construct(){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::applications::Calculator,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_STACKFRAME(&_hx_pos_4ce4401548e47863_196_new)
HXLINE( 196)			_gthis->addUI();
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::applications::Calculator,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_STACKFRAME(&_hx_pos_4ce4401548e47863_198_new)
HXLINE( 199)			::App_obj::listApplications->remove(HX_("calc",95,18,ba,41));
HXLINE( 200)			_gthis->updateItems();
HXLINE( 201)			_gthis->kill();
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_2) HXARGC(0)
            		void _hx_run(){
            			HX_STACKFRAME(&_hx_pos_4ce4401548e47863_202_new)
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_GC_STACKFRAME(&_hx_pos_4ce4401548e47863_8_new)
HXLINE(  28)		this->storedText = HX_("",00,00,00,00);
HXLINE( 189)		 ::applications::Calculator _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 190)		super::__construct(null());
HXLINE( 191)		this->super::taskbar(HX_("calc",95,18,ba,41));
HXLINE( 194)		 ::Dynamic appear =  ::Dynamic(new _hx_Closure_0(_gthis));
HXLINE( 197)		 ::Dynamic exit =  ::Dynamic(new _hx_Closure_1(_gthis));
HXLINE( 202)		 ::Dynamic minus =  ::Dynamic(new _hx_Closure_2());
HXLINE( 193)		this->window =  ::ModernWindow_obj::__alloc( HX_CTX ,322,HX_("Calculator",22,31,89,ae),HX_("assets/images/icons/calc.png",50,6a,65,d8),appear,exit,minus,true);
HXLINE( 205)		{
HXLINE( 205)			 ::ModernWindow _this = this->window;
HXDLIN( 205)			int axes = 17;
HXDLIN( 205)			bool _hx_tmp;
HXDLIN( 205)			if ((axes != 1)) {
HXLINE( 205)				_hx_tmp = (axes == 17);
            			}
            			else {
HXLINE( 205)				_hx_tmp = true;
            			}
HXDLIN( 205)			if (_hx_tmp) {
HXLINE( 205)				int _hx_tmp1 = ::flixel::FlxG_obj::width;
HXDLIN( 205)				_this->set_x(((( (Float)(_hx_tmp1) ) - _this->get_width()) / ( (Float)(2) )));
            			}
HXDLIN( 205)			bool _hx_tmp2;
HXDLIN( 205)			if ((axes != 16)) {
HXLINE( 205)				_hx_tmp2 = (axes == 17);
            			}
            			else {
HXLINE( 205)				_hx_tmp2 = true;
            			}
HXDLIN( 205)			if (_hx_tmp2) {
HXLINE( 205)				int _hx_tmp3 = ::flixel::FlxG_obj::height;
HXDLIN( 205)				_this->set_y(((( (Float)(_hx_tmp3) ) - _this->get_height()) / ( (Float)(2) )));
            			}
            		}
HXLINE( 206)		 ::ModernWindow fh = this->window;
HXDLIN( 206)		fh->set_y((fh->y - ( (Float)(50) )));
HXLINE( 207)		this->add(this->window);
            	}

Dynamic Calculator_obj::__CreateEmpty() { return new Calculator_obj; }

void *Calculator_obj::_hx_vtable = 0;

Dynamic Calculator_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Calculator_obj > _hx_result = new Calculator_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Calculator_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x62817b24) {
		if (inClassId<=(int)0x0487850d) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x0487850d;
		} else {
			return inClassId==(int)0x62817b24;
		}
	} else {
		return inClassId==(int)0x7ccf8994 || inClassId==(int)0x7ed5f915;
	}
}

void Calculator_obj::number(int _hx_Int){
            	HX_STACKFRAME(&_hx_pos_4ce4401548e47863_31_number)
HXDLIN(  31)		 ::applications::Calculator _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN(  31)		::String _hx_tmp1 = _hx_tmp->storedText;
HXDLIN(  31)		_hx_tmp->storedText = (_hx_tmp1 + ::Std_obj::string(_hx_Int));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Calculator_obj,number,(void))

int Calculator_obj::sumFromString(::String input){
            	HX_STACKFRAME(&_hx_pos_4ce4401548e47863_33_sumFromString)
HXLINE(  34)		::Array< ::String > parts;
HXDLIN(  34)		if ((this->isplus == true)) {
HXLINE(  34)			parts = input.split(HX_("+",2b,00,00,00));
            		}
            		else {
HXLINE(  34)			parts = input.split(HX_("-",2d,00,00,00));
            		}
HXLINE(  36)		int sum = 0;
HXLINE(  37)		{
HXLINE(  37)			int _g = 0;
HXDLIN(  37)			while((_g < parts->length)){
HXLINE(  37)				::String part = parts->__get(_g);
HXDLIN(  37)				_g = (_g + 1);
HXLINE(  38)				if ((this->isplus == true)) {
HXLINE(  40)					sum = (sum + ::Std_obj::parseInt(part));
            				}
HXLINE(  42)				if ((this->isplus == false)) {
HXLINE(  44)					 ::Dynamic num1 = ::Std_obj::parseInt(parts->__get(0));
HXLINE(  45)					 ::Dynamic num2 = ::Std_obj::parseInt(parts->__get(1));
HXLINE(  46)					int x = (( (int)(num1) ) - ( (int)(num2) ));
HXLINE(  47)					::String n = ::Std_obj::string(x);
HXLINE(  48)					sum = ( (int)(::Std_obj::parseInt(n)) );
            				}
            			}
            		}
HXLINE(  53)		return sum;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Calculator_obj,sumFromString,return )

void Calculator_obj::equal(){
            	HX_STACKFRAME(&_hx_pos_4ce4401548e47863_55_equal)
HXLINE(  56)		int e = this->sumFromString(this->storedText);
HXLINE(  57)		::String n = ::Std_obj::string(e);
HXLINE(  58)		this->storedText = n;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Calculator_obj,equal,(void))

void Calculator_obj::addUI(){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::applications::Calculator,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_4ce4401548e47863_75_addUI)
HXLINE(  75)			_gthis->number(1);
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::applications::Calculator,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_4ce4401548e47863_83_addUI)
HXLINE(  83)			_gthis->number(2);
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_2, ::applications::Calculator,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_4ce4401548e47863_91_addUI)
HXLINE(  91)			_gthis->number(3);
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_3, ::applications::Calculator,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_4ce4401548e47863_99_addUI)
HXLINE(  99)			_gthis->number(4);
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_4, ::applications::Calculator,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_4ce4401548e47863_107_addUI)
HXLINE( 107)			_gthis->number(5);
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_5, ::applications::Calculator,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_4ce4401548e47863_115_addUI)
HXLINE( 115)			_gthis->number(6);
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_6, ::applications::Calculator,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_4ce4401548e47863_123_addUI)
HXLINE( 123)			_gthis->number(7);
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_7, ::applications::Calculator,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_4ce4401548e47863_131_addUI)
HXLINE( 131)			_gthis->number(8);
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_8, ::applications::Calculator,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_4ce4401548e47863_139_addUI)
HXLINE( 139)			_gthis->number(9);
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_9, ::applications::Calculator,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_4ce4401548e47863_147_addUI)
HXLINE( 147)			_gthis->number(0);
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_10, ::applications::Calculator,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_4ce4401548e47863_154_addUI)
HXLINE( 155)			 ::applications::Calculator _gthis1 = _gthis;
HXDLIN( 155)			_gthis1->storedText = (_gthis1->storedText + HX_("+",2b,00,00,00));
HXLINE( 156)			_gthis->isplus = true;
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_11, ::applications::Calculator,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_4ce4401548e47863_163_addUI)
HXLINE( 164)			 ::applications::Calculator _gthis1 = _gthis;
HXDLIN( 164)			_gthis1->storedText = (_gthis1->storedText + HX_("-",2d,00,00,00));
HXLINE( 165)			_gthis->isplus = false;
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_12, ::applications::Calculator,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_4ce4401548e47863_173_addUI)
HXLINE( 173)			_gthis->equal();
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_13, ::applications::Calculator,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_4ce4401548e47863_181_addUI)
HXLINE( 181)			_gthis->storedText = HX_("",00,00,00,00);
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_GC_STACKFRAME(&_hx_pos_4ce4401548e47863_61_addUI)
HXDLIN(  61)		 ::applications::Calculator _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE(  62)		this->bg =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,0,0,HX_("assets/images/setup/bg.png",3d,7e,fe,cd));
HXLINE(  63)		this->bg->setGraphicSize(322,501);
HXLINE(  64)		this->bg->updateHitbox();
HXLINE(  65)		this->bg->set_color(2565929);
HXLINE(  66)		this->add(this->bg);
HXLINE(  68)		this->outputText =  ::flixel::text::FlxText_obj::__alloc( HX_CTX ,0,0,0,HX_("",00,00,00,00),36,null());
HXLINE(  69)		this->outputText->set_alignment(HX_("right",dc,0b,64,e9));
HXLINE(  70)		this->outputText->set_font(HX_("assets/fonts/my.ttf",5b,83,ee,55));
HXLINE(  71)		this->add(this->outputText);
HXLINE(  74)		 ::Dynamic name =  ::Dynamic(new _hx_Closure_0(_gthis));
HXDLIN(  74)		this->oneButton =  ::flixel::ui::FlxButton_obj::__alloc( HX_CTX ,0,0,HX_("1",31,00,00,00),name);
HXLINE(  77)		this->oneButton->makeGraphic(65,65,-8355712,null(),null());
HXLINE(  78)		this->oneButton->label->setFormat(HX_("assets/fonts/my.ttf",5b,83,ee,55),25,-1,HX_("center",d5,25,db,05),null(),null(),null());
HXLINE(  79)		this->oneButton->updateHitbox();
HXLINE(  80)		this->add(this->oneButton);
HXLINE(  82)		 ::Dynamic name1 =  ::Dynamic(new _hx_Closure_1(_gthis));
HXDLIN(  82)		this->twoButton =  ::flixel::ui::FlxButton_obj::__alloc( HX_CTX ,0,0,HX_("2",32,00,00,00),name1);
HXLINE(  85)		this->twoButton->makeGraphic(65,65,-8355712,null(),null());
HXLINE(  86)		this->twoButton->label->setFormat(HX_("assets/fonts/my.ttf",5b,83,ee,55),25,-1,HX_("center",d5,25,db,05),null(),null(),null());
HXLINE(  87)		this->twoButton->updateHitbox();
HXLINE(  88)		this->add(this->twoButton);
HXLINE(  90)		 ::Dynamic name2 =  ::Dynamic(new _hx_Closure_2(_gthis));
HXDLIN(  90)		this->threeButton =  ::flixel::ui::FlxButton_obj::__alloc( HX_CTX ,0,0,HX_("3",33,00,00,00),name2);
HXLINE(  93)		this->threeButton->makeGraphic(65,65,-8355712,null(),null());
HXLINE(  94)		this->threeButton->label->setFormat(HX_("assets/fonts/my.ttf",5b,83,ee,55),25,-1,HX_("center",d5,25,db,05),null(),null(),null());
HXLINE(  95)		this->threeButton->updateHitbox();
HXLINE(  96)		this->add(this->threeButton);
HXLINE(  98)		 ::Dynamic name3 =  ::Dynamic(new _hx_Closure_3(_gthis));
HXDLIN(  98)		this->fourButton =  ::flixel::ui::FlxButton_obj::__alloc( HX_CTX ,0,0,HX_("4",34,00,00,00),name3);
HXLINE( 101)		this->fourButton->makeGraphic(65,65,-8355712,null(),null());
HXLINE( 102)		this->fourButton->label->setFormat(HX_("assets/fonts/my.ttf",5b,83,ee,55),25,-1,HX_("center",d5,25,db,05),null(),null(),null());
HXLINE( 103)		this->fourButton->updateHitbox();
HXLINE( 104)		this->add(this->fourButton);
HXLINE( 106)		 ::Dynamic name4 =  ::Dynamic(new _hx_Closure_4(_gthis));
HXDLIN( 106)		this->fiveButton =  ::flixel::ui::FlxButton_obj::__alloc( HX_CTX ,0,0,HX_("5",35,00,00,00),name4);
HXLINE( 109)		this->fiveButton->makeGraphic(65,65,-8355712,null(),null());
HXLINE( 110)		this->fiveButton->label->setFormat(HX_("assets/fonts/my.ttf",5b,83,ee,55),25,-1,HX_("center",d5,25,db,05),null(),null(),null());
HXLINE( 111)		this->fiveButton->updateHitbox();
HXLINE( 112)		this->add(this->fiveButton);
HXLINE( 114)		 ::Dynamic name5 =  ::Dynamic(new _hx_Closure_5(_gthis));
HXDLIN( 114)		this->sixButton =  ::flixel::ui::FlxButton_obj::__alloc( HX_CTX ,0,0,HX_("6",36,00,00,00),name5);
HXLINE( 117)		this->sixButton->makeGraphic(65,65,-8355712,null(),null());
HXLINE( 118)		this->sixButton->label->setFormat(HX_("assets/fonts/my.ttf",5b,83,ee,55),25,-1,HX_("center",d5,25,db,05),null(),null(),null());
HXLINE( 119)		this->sixButton->updateHitbox();
HXLINE( 120)		this->add(this->sixButton);
HXLINE( 122)		 ::Dynamic name6 =  ::Dynamic(new _hx_Closure_6(_gthis));
HXDLIN( 122)		this->sevenButton =  ::flixel::ui::FlxButton_obj::__alloc( HX_CTX ,0,0,HX_("7",37,00,00,00),name6);
HXLINE( 125)		this->sevenButton->makeGraphic(65,65,-8355712,null(),null());
HXLINE( 126)		this->sevenButton->label->setFormat(HX_("assets/fonts/my.ttf",5b,83,ee,55),25,-1,HX_("center",d5,25,db,05),null(),null(),null());
HXLINE( 127)		this->sevenButton->updateHitbox();
HXLINE( 128)		this->add(this->sevenButton);
HXLINE( 130)		 ::Dynamic name7 =  ::Dynamic(new _hx_Closure_7(_gthis));
HXDLIN( 130)		this->eightButton =  ::flixel::ui::FlxButton_obj::__alloc( HX_CTX ,0,0,HX_("8",38,00,00,00),name7);
HXLINE( 133)		this->eightButton->makeGraphic(65,65,-8355712,null(),null());
HXLINE( 134)		this->eightButton->label->setFormat(HX_("assets/fonts/my.ttf",5b,83,ee,55),25,-1,HX_("center",d5,25,db,05),null(),null(),null());
HXLINE( 135)		this->eightButton->updateHitbox();
HXLINE( 136)		this->add(this->eightButton);
HXLINE( 138)		 ::Dynamic name8 =  ::Dynamic(new _hx_Closure_8(_gthis));
HXDLIN( 138)		this->nineButton =  ::flixel::ui::FlxButton_obj::__alloc( HX_CTX ,0,0,HX_("9",39,00,00,00),name8);
HXLINE( 141)		this->nineButton->makeGraphic(65,65,-8355712,null(),null());
HXLINE( 142)		this->nineButton->label->setFormat(HX_("assets/fonts/my.ttf",5b,83,ee,55),25,-1,HX_("center",d5,25,db,05),null(),null(),null());
HXLINE( 143)		this->nineButton->updateHitbox();
HXLINE( 144)		this->add(this->nineButton);
HXLINE( 146)		 ::Dynamic name9 =  ::Dynamic(new _hx_Closure_9(_gthis));
HXDLIN( 146)		this->zeroButton =  ::flixel::ui::FlxButton_obj::__alloc( HX_CTX ,0,0,HX_("0",30,00,00,00),name9);
HXLINE( 149)		this->zeroButton->makeGraphic(65,65,-8355712,null(),null());
HXLINE( 150)		this->zeroButton->label->setFormat(HX_("assets/fonts/my.ttf",5b,83,ee,55),25,-1,HX_("center",d5,25,db,05),null(),null(),null());
HXLINE( 151)		this->zeroButton->updateHitbox();
HXLINE( 152)		this->add(this->zeroButton);
HXLINE( 154)		 ::Dynamic name10 =  ::Dynamic(new _hx_Closure_10(_gthis));
HXDLIN( 154)		this->plusButton =  ::flixel::ui::FlxButton_obj::__alloc( HX_CTX ,0,0,HX_("+",2b,00,00,00),name10);
HXLINE( 158)		this->plusButton->makeGraphic(65,65,-8355712,null(),null());
HXLINE( 159)		this->plusButton->label->setFormat(HX_("assets/fonts/my.ttf",5b,83,ee,55),32,-1,HX_("center",d5,25,db,05),null(),null(),null());
HXLINE( 160)		this->plusButton->updateHitbox();
HXLINE( 161)		this->add(this->plusButton);
HXLINE( 163)		 ::Dynamic name11 =  ::Dynamic(new _hx_Closure_11(_gthis));
HXDLIN( 163)		this->minusButton =  ::flixel::ui::FlxButton_obj::__alloc( HX_CTX ,0,0,HX_("-",2d,00,00,00),name11);
HXLINE( 167)		this->minusButton->makeGraphic(65,65,-8355712,null(),null());
HXLINE( 168)		this->minusButton->label->setFormat(HX_("assets/fonts/my.ttf",5b,83,ee,55),25,-1,HX_("center",d5,25,db,05),null(),null(),null());
HXLINE( 169)		this->minusButton->updateHitbox();
HXLINE( 170)		this->add(this->minusButton);
HXLINE( 172)		 ::Dynamic name12 =  ::Dynamic(new _hx_Closure_12(_gthis));
HXDLIN( 172)		this->equalButton =  ::flixel::ui::FlxButton_obj::__alloc( HX_CTX ,0,0,HX_("=",3d,00,00,00),name12);
HXLINE( 175)		 ::flixel::ui::FlxButton _hx_tmp = this->equalButton;
HXDLIN( 175)		int Alpha = 255;
HXDLIN( 175)		int color = ::flixel::util::_FlxColor::FlxColor_Impl__obj::_new(null());
HXDLIN( 175)		{
HXLINE( 175)			color = (color & -16711681);
HXDLIN( 175)			color = (color | 1048576);
            		}
HXDLIN( 175)		{
HXLINE( 175)			color = (color & -65281);
HXDLIN( 175)			color = (color | 39936);
            		}
HXDLIN( 175)		{
HXLINE( 175)			color = (color & -256);
HXDLIN( 175)			color = (color | 238);
            		}
HXDLIN( 175)		{
HXLINE( 175)			color = (color & 16777215);
HXDLIN( 175)			int color1;
HXDLIN( 175)			if ((Alpha > 255)) {
HXLINE( 175)				color1 = 255;
            			}
            			else {
HXLINE( 175)				if ((Alpha < 0)) {
HXLINE( 175)					color1 = 0;
            				}
            				else {
HXLINE( 175)					color1 = Alpha;
            				}
            			}
HXDLIN( 175)			color = (color | (color1 << 24));
            		}
HXDLIN( 175)		_hx_tmp->makeGraphic(65,65,color,null(),null());
HXLINE( 176)		this->equalButton->label->setFormat(HX_("assets/fonts/my.ttf",5b,83,ee,55),25,-16777216,HX_("center",d5,25,db,05),null(),null(),null());
HXLINE( 177)		this->equalButton->updateHitbox();
HXLINE( 178)		this->add(this->equalButton);
HXLINE( 180)		 ::Dynamic name13 =  ::Dynamic(new _hx_Closure_13(_gthis));
HXDLIN( 180)		this->cButton =  ::flixel::ui::FlxButton_obj::__alloc( HX_CTX ,0,0,HX_("C",43,00,00,00),name13);
HXLINE( 183)		this->cButton->makeGraphic(65,65,-8355712,null(),null());
HXLINE( 184)		this->cButton->label->setFormat(HX_("assets/fonts/my.ttf",5b,83,ee,55),25,-1,HX_("center",d5,25,db,05),null(),null(),null());
HXLINE( 185)		this->cButton->updateHitbox();
HXLINE( 186)		this->add(this->cButton);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Calculator_obj,addUI,(void))

void Calculator_obj::update(Float elapsed){
            	HX_STACKFRAME(&_hx_pos_4ce4401548e47863_209_update)
HXLINE( 210)		this->super::update(elapsed);
HXLINE( 212)		this->bg->set_x(this->window->x);
HXLINE( 213)		this->bg->set_y((this->window->y + 28));
HXLINE( 215)		this->outputText->set_x((this->window->x + 10));
HXLINE( 216)		this->outputText->set_y((this->window->y + 40));
HXLINE( 217)		this->outputText->set_text(this->storedText);
HXLINE( 219)		this->oneButton->set_x((this->window->x + 5));
HXLINE( 220)		this->oneButton->set_y((this->window->y + 150));
HXLINE( 222)		this->twoButton->set_x((this->oneButton->x + 70));
HXLINE( 223)		this->twoButton->set_y(this->oneButton->y);
HXLINE( 225)		this->threeButton->set_x((this->twoButton->x + 70));
HXLINE( 226)		this->threeButton->set_y(this->twoButton->y);
HXLINE( 228)		this->plusButton->set_x((this->threeButton->x + 70));
HXLINE( 229)		this->plusButton->set_y(this->threeButton->y);
HXLINE( 231)		this->fourButton->set_x((this->window->x + 5));
HXLINE( 232)		this->fourButton->set_y((this->window->y + 225));
HXLINE( 234)		this->fiveButton->set_x((this->fourButton->x + 70));
HXLINE( 235)		this->fiveButton->set_y(this->fourButton->y);
HXLINE( 237)		this->sixButton->set_x((this->fiveButton->x + 70));
HXLINE( 239)		this->sixButton->set_y(this->fiveButton->y);
HXLINE( 241)		this->minusButton->set_x((this->sixButton->x + 70));
HXLINE( 242)		this->minusButton->set_y(this->sixButton->y);
HXLINE( 244)		this->sevenButton->set_x((this->window->x + 5));
HXLINE( 245)		this->sevenButton->set_y((this->window->y + 300));
HXLINE( 247)		this->eightButton->set_x((this->sevenButton->x + 70));
HXLINE( 248)		this->eightButton->set_y(this->sevenButton->y);
HXLINE( 250)		this->nineButton->set_x((this->eightButton->x + 70));
HXLINE( 251)		this->nineButton->set_y(this->eightButton->y);
HXLINE( 253)		this->equalButton->set_x((this->nineButton->x + 70));
HXLINE( 254)		this->equalButton->set_y(this->nineButton->y);
HXLINE( 256)		this->zeroButton->set_x((this->window->x + 75));
HXLINE( 257)		this->zeroButton->set_y((this->window->y + 375));
HXLINE( 259)		this->cButton->set_x((this->window->x + 215));
HXLINE( 260)		this->cButton->set_y(this->zeroButton->y);
            	}



::hx::ObjectPtr< Calculator_obj > Calculator_obj::__new() {
	::hx::ObjectPtr< Calculator_obj > __this = new Calculator_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< Calculator_obj > Calculator_obj::__alloc(::hx::Ctx *_hx_ctx) {
	Calculator_obj *__this = (Calculator_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Calculator_obj), true, "applications.Calculator"));
	*(void **)__this = Calculator_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Calculator_obj::Calculator_obj()
{
}

void Calculator_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Calculator);
	HX_MARK_MEMBER_NAME(window,"window");
	HX_MARK_MEMBER_NAME(bg,"bg");
	HX_MARK_MEMBER_NAME(oneButton,"oneButton");
	HX_MARK_MEMBER_NAME(twoButton,"twoButton");
	HX_MARK_MEMBER_NAME(threeButton,"threeButton");
	HX_MARK_MEMBER_NAME(fourButton,"fourButton");
	HX_MARK_MEMBER_NAME(fiveButton,"fiveButton");
	HX_MARK_MEMBER_NAME(sixButton,"sixButton");
	HX_MARK_MEMBER_NAME(sevenButton,"sevenButton");
	HX_MARK_MEMBER_NAME(eightButton,"eightButton");
	HX_MARK_MEMBER_NAME(nineButton,"nineButton");
	HX_MARK_MEMBER_NAME(zeroButton,"zeroButton");
	HX_MARK_MEMBER_NAME(plusButton,"plusButton");
	HX_MARK_MEMBER_NAME(minusButton,"minusButton");
	HX_MARK_MEMBER_NAME(equalButton,"equalButton");
	HX_MARK_MEMBER_NAME(cButton,"cButton");
	HX_MARK_MEMBER_NAME(isplus,"isplus");
	HX_MARK_MEMBER_NAME(outputText,"outputText");
	HX_MARK_MEMBER_NAME(storedText,"storedText");
	 ::App_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Calculator_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(window,"window");
	HX_VISIT_MEMBER_NAME(bg,"bg");
	HX_VISIT_MEMBER_NAME(oneButton,"oneButton");
	HX_VISIT_MEMBER_NAME(twoButton,"twoButton");
	HX_VISIT_MEMBER_NAME(threeButton,"threeButton");
	HX_VISIT_MEMBER_NAME(fourButton,"fourButton");
	HX_VISIT_MEMBER_NAME(fiveButton,"fiveButton");
	HX_VISIT_MEMBER_NAME(sixButton,"sixButton");
	HX_VISIT_MEMBER_NAME(sevenButton,"sevenButton");
	HX_VISIT_MEMBER_NAME(eightButton,"eightButton");
	HX_VISIT_MEMBER_NAME(nineButton,"nineButton");
	HX_VISIT_MEMBER_NAME(zeroButton,"zeroButton");
	HX_VISIT_MEMBER_NAME(plusButton,"plusButton");
	HX_VISIT_MEMBER_NAME(minusButton,"minusButton");
	HX_VISIT_MEMBER_NAME(equalButton,"equalButton");
	HX_VISIT_MEMBER_NAME(cButton,"cButton");
	HX_VISIT_MEMBER_NAME(isplus,"isplus");
	HX_VISIT_MEMBER_NAME(outputText,"outputText");
	HX_VISIT_MEMBER_NAME(storedText,"storedText");
	 ::App_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val Calculator_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"bg") ) { return ::hx::Val( bg ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"equal") ) { return ::hx::Val( equal_dyn() ); }
		if (HX_FIELD_EQ(inName,"addUI") ) { return ::hx::Val( addUI_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"window") ) { return ::hx::Val( window ); }
		if (HX_FIELD_EQ(inName,"isplus") ) { return ::hx::Val( isplus ); }
		if (HX_FIELD_EQ(inName,"number") ) { return ::hx::Val( number_dyn() ); }
		if (HX_FIELD_EQ(inName,"update") ) { return ::hx::Val( update_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"cButton") ) { return ::hx::Val( cButton ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"oneButton") ) { return ::hx::Val( oneButton ); }
		if (HX_FIELD_EQ(inName,"twoButton") ) { return ::hx::Val( twoButton ); }
		if (HX_FIELD_EQ(inName,"sixButton") ) { return ::hx::Val( sixButton ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"fourButton") ) { return ::hx::Val( fourButton ); }
		if (HX_FIELD_EQ(inName,"fiveButton") ) { return ::hx::Val( fiveButton ); }
		if (HX_FIELD_EQ(inName,"nineButton") ) { return ::hx::Val( nineButton ); }
		if (HX_FIELD_EQ(inName,"zeroButton") ) { return ::hx::Val( zeroButton ); }
		if (HX_FIELD_EQ(inName,"plusButton") ) { return ::hx::Val( plusButton ); }
		if (HX_FIELD_EQ(inName,"outputText") ) { return ::hx::Val( outputText ); }
		if (HX_FIELD_EQ(inName,"storedText") ) { return ::hx::Val( storedText ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"threeButton") ) { return ::hx::Val( threeButton ); }
		if (HX_FIELD_EQ(inName,"sevenButton") ) { return ::hx::Val( sevenButton ); }
		if (HX_FIELD_EQ(inName,"eightButton") ) { return ::hx::Val( eightButton ); }
		if (HX_FIELD_EQ(inName,"minusButton") ) { return ::hx::Val( minusButton ); }
		if (HX_FIELD_EQ(inName,"equalButton") ) { return ::hx::Val( equalButton ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"sumFromString") ) { return ::hx::Val( sumFromString_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Calculator_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"bg") ) { bg=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"window") ) { window=inValue.Cast<  ::ModernWindow >(); return inValue; }
		if (HX_FIELD_EQ(inName,"isplus") ) { isplus=inValue.Cast< bool >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"cButton") ) { cButton=inValue.Cast<  ::flixel::ui::FlxButton >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"oneButton") ) { oneButton=inValue.Cast<  ::flixel::ui::FlxButton >(); return inValue; }
		if (HX_FIELD_EQ(inName,"twoButton") ) { twoButton=inValue.Cast<  ::flixel::ui::FlxButton >(); return inValue; }
		if (HX_FIELD_EQ(inName,"sixButton") ) { sixButton=inValue.Cast<  ::flixel::ui::FlxButton >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"fourButton") ) { fourButton=inValue.Cast<  ::flixel::ui::FlxButton >(); return inValue; }
		if (HX_FIELD_EQ(inName,"fiveButton") ) { fiveButton=inValue.Cast<  ::flixel::ui::FlxButton >(); return inValue; }
		if (HX_FIELD_EQ(inName,"nineButton") ) { nineButton=inValue.Cast<  ::flixel::ui::FlxButton >(); return inValue; }
		if (HX_FIELD_EQ(inName,"zeroButton") ) { zeroButton=inValue.Cast<  ::flixel::ui::FlxButton >(); return inValue; }
		if (HX_FIELD_EQ(inName,"plusButton") ) { plusButton=inValue.Cast<  ::flixel::ui::FlxButton >(); return inValue; }
		if (HX_FIELD_EQ(inName,"outputText") ) { outputText=inValue.Cast<  ::flixel::text::FlxText >(); return inValue; }
		if (HX_FIELD_EQ(inName,"storedText") ) { storedText=inValue.Cast< ::String >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"threeButton") ) { threeButton=inValue.Cast<  ::flixel::ui::FlxButton >(); return inValue; }
		if (HX_FIELD_EQ(inName,"sevenButton") ) { sevenButton=inValue.Cast<  ::flixel::ui::FlxButton >(); return inValue; }
		if (HX_FIELD_EQ(inName,"eightButton") ) { eightButton=inValue.Cast<  ::flixel::ui::FlxButton >(); return inValue; }
		if (HX_FIELD_EQ(inName,"minusButton") ) { minusButton=inValue.Cast<  ::flixel::ui::FlxButton >(); return inValue; }
		if (HX_FIELD_EQ(inName,"equalButton") ) { equalButton=inValue.Cast<  ::flixel::ui::FlxButton >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Calculator_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("window",f0,93,8c,52));
	outFields->push(HX_("bg",c5,55,00,00));
	outFields->push(HX_("oneButton",f8,40,c6,80));
	outFields->push(HX_("twoButton",9e,f4,19,42));
	outFields->push(HX_("threeButton",f0,c4,dd,79));
	outFields->push(HX_("fourButton",78,2a,6a,cb));
	outFields->push(HX_("fiveButton",c4,1e,5d,f6));
	outFields->push(HX_("sixButton",b4,7a,a7,c4));
	outFields->push(HX_("sevenButton",df,c2,26,7a));
	outFields->push(HX_("eightButton",a1,bc,19,b8));
	outFields->push(HX_("nineButton",c4,4c,1d,2f));
	outFields->push(HX_("zeroButton",3a,b3,75,6b));
	outFields->push(HX_("plusButton",ec,14,14,ff));
	outFields->push(HX_("minusButton",82,4a,a1,41));
	outFields->push(HX_("equalButton",c6,64,94,66));
	outFields->push(HX_("cButton",b5,c2,41,23));
	outFields->push(HX_("isplus",44,d8,e7,7c));
	outFields->push(HX_("outputText",4e,1c,ee,ae));
	outFields->push(HX_("storedText",b0,37,36,76));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Calculator_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::ModernWindow */ ,(int)offsetof(Calculator_obj,window),HX_("window",f0,93,8c,52)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(Calculator_obj,bg),HX_("bg",c5,55,00,00)},
	{::hx::fsObject /*  ::flixel::ui::FlxButton */ ,(int)offsetof(Calculator_obj,oneButton),HX_("oneButton",f8,40,c6,80)},
	{::hx::fsObject /*  ::flixel::ui::FlxButton */ ,(int)offsetof(Calculator_obj,twoButton),HX_("twoButton",9e,f4,19,42)},
	{::hx::fsObject /*  ::flixel::ui::FlxButton */ ,(int)offsetof(Calculator_obj,threeButton),HX_("threeButton",f0,c4,dd,79)},
	{::hx::fsObject /*  ::flixel::ui::FlxButton */ ,(int)offsetof(Calculator_obj,fourButton),HX_("fourButton",78,2a,6a,cb)},
	{::hx::fsObject /*  ::flixel::ui::FlxButton */ ,(int)offsetof(Calculator_obj,fiveButton),HX_("fiveButton",c4,1e,5d,f6)},
	{::hx::fsObject /*  ::flixel::ui::FlxButton */ ,(int)offsetof(Calculator_obj,sixButton),HX_("sixButton",b4,7a,a7,c4)},
	{::hx::fsObject /*  ::flixel::ui::FlxButton */ ,(int)offsetof(Calculator_obj,sevenButton),HX_("sevenButton",df,c2,26,7a)},
	{::hx::fsObject /*  ::flixel::ui::FlxButton */ ,(int)offsetof(Calculator_obj,eightButton),HX_("eightButton",a1,bc,19,b8)},
	{::hx::fsObject /*  ::flixel::ui::FlxButton */ ,(int)offsetof(Calculator_obj,nineButton),HX_("nineButton",c4,4c,1d,2f)},
	{::hx::fsObject /*  ::flixel::ui::FlxButton */ ,(int)offsetof(Calculator_obj,zeroButton),HX_("zeroButton",3a,b3,75,6b)},
	{::hx::fsObject /*  ::flixel::ui::FlxButton */ ,(int)offsetof(Calculator_obj,plusButton),HX_("plusButton",ec,14,14,ff)},
	{::hx::fsObject /*  ::flixel::ui::FlxButton */ ,(int)offsetof(Calculator_obj,minusButton),HX_("minusButton",82,4a,a1,41)},
	{::hx::fsObject /*  ::flixel::ui::FlxButton */ ,(int)offsetof(Calculator_obj,equalButton),HX_("equalButton",c6,64,94,66)},
	{::hx::fsObject /*  ::flixel::ui::FlxButton */ ,(int)offsetof(Calculator_obj,cButton),HX_("cButton",b5,c2,41,23)},
	{::hx::fsBool,(int)offsetof(Calculator_obj,isplus),HX_("isplus",44,d8,e7,7c)},
	{::hx::fsObject /*  ::flixel::text::FlxText */ ,(int)offsetof(Calculator_obj,outputText),HX_("outputText",4e,1c,ee,ae)},
	{::hx::fsString,(int)offsetof(Calculator_obj,storedText),HX_("storedText",b0,37,36,76)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Calculator_obj_sStaticStorageInfo = 0;
#endif

static ::String Calculator_obj_sMemberFields[] = {
	HX_("window",f0,93,8c,52),
	HX_("bg",c5,55,00,00),
	HX_("oneButton",f8,40,c6,80),
	HX_("twoButton",9e,f4,19,42),
	HX_("threeButton",f0,c4,dd,79),
	HX_("fourButton",78,2a,6a,cb),
	HX_("fiveButton",c4,1e,5d,f6),
	HX_("sixButton",b4,7a,a7,c4),
	HX_("sevenButton",df,c2,26,7a),
	HX_("eightButton",a1,bc,19,b8),
	HX_("nineButton",c4,4c,1d,2f),
	HX_("zeroButton",3a,b3,75,6b),
	HX_("plusButton",ec,14,14,ff),
	HX_("minusButton",82,4a,a1,41),
	HX_("equalButton",c6,64,94,66),
	HX_("cButton",b5,c2,41,23),
	HX_("isplus",44,d8,e7,7c),
	HX_("outputText",4e,1c,ee,ae),
	HX_("storedText",b0,37,36,76),
	HX_("number",c9,86,7a,a1),
	HX_("sumFromString",46,57,ce,8b),
	HX_("equal",b4,cf,82,72),
	HX_("addUI",b5,c6,43,1c),
	HX_("update",09,86,05,87),
	::String(null()) };

::hx::Class Calculator_obj::__mClass;

void Calculator_obj::__register()
{
	Calculator_obj _hx_dummy;
	Calculator_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("applications.Calculator",8d,18,b9,4e);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Calculator_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Calculator_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Calculator_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Calculator_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace applications
