// Generated by Haxe 4.3.6
#ifndef INCLUDED_ModernWindow
#define INCLUDED_ModernWindow

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
HX_DECLARE_CLASS0(ModernWindow)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,input,IFlxInput)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,ui,FlxButton)
HX_DECLARE_CLASS2(flixel,ui,FlxTypedButton_flixel_text_FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)



class HXCPP_CLASS_ATTRIBUTES ModernWindow_obj : public  ::flixel::FlxSprite_obj
{
	public:
		typedef  ::flixel::FlxSprite_obj super;
		typedef ModernWindow_obj OBJ_;
		ModernWindow_obj();

	public:
		enum { _hx_ClassId = 0x28a0bcd7 };

		void __construct(int X,::String title,::String icon, ::Dynamic OnAppear, ::Dynamic DefaultExit, ::Dynamic DefaultMinus,bool CanTouch);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="ModernWindow")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"ModernWindow"); }
		static ::hx::ObjectPtr< ModernWindow_obj > __new(int X,::String title,::String icon, ::Dynamic OnAppear, ::Dynamic DefaultExit, ::Dynamic DefaultMinus,bool CanTouch);
		static ::hx::ObjectPtr< ModernWindow_obj > __alloc(::hx::Ctx *_hx_ctx,int X,::String title,::String icon, ::Dynamic OnAppear, ::Dynamic DefaultExit, ::Dynamic DefaultMinus,bool CanTouch);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ModernWindow_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ModernWindow",4f,9b,2a,db); }

		 ::flixel::text::FlxText titleText;
		 ::flixel::FlxSprite iconWindow;
		 ::flixel::ui::FlxButton exitWindow;
		 ::flixel::ui::FlxButton minusWindow;
		bool isDragging;
		Float dragOffsetX;
		Float dragOffsetY;
		bool canTouch;
		void draw();

		void update(Float elapsed);

};


#endif /* INCLUDED_ModernWindow */ 
