// Generated by Haxe 4.3.6
#ifndef INCLUDED_CommandFunction
#define INCLUDED_CommandFunction

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
HX_DECLARE_CLASS0(CommandFunction)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)



class HXCPP_CLASS_ATTRIBUTES CommandFunction_obj : public  ::flixel::group::FlxTypedGroup_obj
{
	public:
		typedef  ::flixel::group::FlxTypedGroup_obj super;
		typedef CommandFunction_obj OBJ_;
		CommandFunction_obj();

	public:
		enum { _hx_ClassId = 0x0b4a26db };

		void __construct(::String command);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="CommandFunction")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"CommandFunction"); }
		static ::hx::ObjectPtr< CommandFunction_obj > __new(::String command);
		static ::hx::ObjectPtr< CommandFunction_obj > __alloc(::hx::Ctx *_hx_ctx,::String command);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~CommandFunction_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("CommandFunction",63,a3,10,e1); }

};


#endif /* INCLUDED_CommandFunction */ 
