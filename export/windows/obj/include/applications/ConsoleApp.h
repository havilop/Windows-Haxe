// Generated by Haxe 4.3.6
#ifndef INCLUDED_applications_ConsoleApp
#define INCLUDED_applications_ConsoleApp

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_App
#include <App.h>
#endif
HX_DECLARE_CLASS0(App)
HX_DECLARE_CLASS0(ModernWindow)
HX_DECLARE_CLASS1(applications,ConsoleApp)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS3(flixel,addons,ui,FlxInputText)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)

namespace applications{


class HXCPP_CLASS_ATTRIBUTES ConsoleApp_obj : public  ::App_obj
{
	public:
		typedef  ::App_obj super;
		typedef ConsoleApp_obj OBJ_;
		ConsoleApp_obj();

	public:
		enum { _hx_ClassId = 0x0ad7a431 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="applications.ConsoleApp")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"applications.ConsoleApp"); }
		static ::hx::ObjectPtr< ConsoleApp_obj > __new();
		static ::hx::ObjectPtr< ConsoleApp_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ConsoleApp_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ConsoleApp",aa,3d,d3,df); }

		 ::ModernWindow window;
		 ::flixel::addons::ui::FlxInputText consoleInput;
		 ::flixel::text::FlxText consoleOutput;
		 ::Dynamic storedVarOutPut;
		bool IsUPorDOWN;
		bool IsRandom;
		bool up;
		 ::Dynamic upstored;
		 ::Dynamic downstored;
		bool down;
		 ::flixel::FlxSprite bg;
		::Array< ::String > listWords;
		::Array< ::String > listCommand;
		 ::Dynamic o;
		int _hx_int(int from,int to);
		::Dynamic _hx_int_dyn();

		void exit();
		::Dynamic exit_dyn();

		void onConsoleCommandEntered( ::Dynamic text,::String action);
		::Dynamic onConsoleCommandEntered_dyn();

		void logToConsole(::String message);
		::Dynamic logToConsole_dyn();

		void stopFunction();
		::Dynamic stopFunction_dyn();

		void update(Float elapsed);

		void destroy();

};

} // end namespace applications

#endif /* INCLUDED_applications_ConsoleApp */ 
