// Generated by Haxe 4.3.6
#ifndef INCLUDED_states_OOBEState
#define INCLUDED_states_OOBEState

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
HX_DECLARE_CLASS0(CustomWindow)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS1(flixel,FlxState)
HX_DECLARE_CLASS1(flixel,IFlxBasic)
HX_DECLARE_CLASS1(flixel,IFlxSprite)
HX_DECLARE_CLASS3(flixel,addons,ui,FlxInputText)
HX_DECLARE_CLASS3(flixel,addons,ui,FlxUIInputText)
HX_DECLARE_CLASS4(flixel,addons,ui,interfaces,IFlxUIWidget)
HX_DECLARE_CLASS4(flixel,addons,ui,interfaces,IHasParams)
HX_DECLARE_CLASS4(flixel,addons,ui,interfaces,IResizable)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,input,IFlxInput)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,ui,FlxButton)
HX_DECLARE_CLASS2(flixel,ui,FlxTypedButton_flixel_text_FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(states,OOBEState)

namespace states{


class HXCPP_CLASS_ATTRIBUTES OOBEState_obj : public  ::flixel::FlxState_obj
{
	public:
		typedef  ::flixel::FlxState_obj super;
		typedef OOBEState_obj OBJ_;
		OOBEState_obj();

	public:
		enum { _hx_ClassId = 0x057b3cac };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="states.OOBEState")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"states.OOBEState"); }
		static ::hx::ObjectPtr< OOBEState_obj > __new();
		static ::hx::ObjectPtr< OOBEState_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~OOBEState_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("OOBEState",2e,08,72,25); }

		bool afterLoading;
		bool allow;
		 ::Dynamic o;
		 ::Dynamic l;
		 ::flixel::text::FlxText languageText;
		 ::flixel::FlxSprite background;
		 ::flixel::ui::FlxButton en;
		 ::flixel::ui::FlxButton ru;
		bool isEn;
		bool isRu;
		 ::flixel::ui::FlxButton NextButtonLanguage;
		 ::flixel::text::FlxText userText;
		 ::flixel::addons::ui::FlxUIInputText inputUserText;
		 ::flixel::addons::ui::FlxUIInputText inputPassword;
		::String storedPassword;
		 ::flixel::ui::FlxButton userButton;
		::String storedText;
		 ::CustomWindow mainWindows;
		void create();

		void update(Float elapsed);

		void destroy();

};

} // end namespace states

#endif /* INCLUDED_states_OOBEState */ 
